# On every push this script is executed
on:
  push:
  workflow_dispatch:
name: Build and deploy GH Pages
jobs:
  build_and_dryrun:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master'
    steps:
      - name: checkout
        # uses: thomasantony/action-cached-lfs-checkout@v1
        uses: actions/checkout@v4
      - name: Create Git LFS file list
        run: git lfs ls-files -l |cut -d' ' -f1 |sort >.git/lfs-hashes.txt

      - name: Restore Git LFS object cache
        uses: actions/cache@v4
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfsdata-v1-${{ hashFiles('.git/lfs-hashes.txt') }}
          restore-keys: |
            ${{ runner.os }}-lfsdata-v1-
            ${{ runner.os }}-lfsdata

      - name: Fetch any needed Git LFS objects and prune extraneous ones
        run: git lfs fetch --prune

      - name: Check out Git LFS content
        run: git lfs checkout

      - name: Check out the private notes repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.NOTES_REPO }}
          ref: master
          token: ${{ secrets.PRIVATE_TOKEN }}
          path: content/notes

      - name: Build site using Zola
        uses: thomasantony/zola-build-action@v1.0.5
      - name: Set owner of working dir recursively
        run: sudo chown -R $(whoami) .
      
      - name: Download and extract game release from game repo
        env:
          GH_TOKEN: ${{ secrets.PRIVATE_TOKEN }}
          GAME_REPO: ${{ secrets.GAME_REPO }}
          RELEASE_TAG: ${{ vars.GNC_TRAINER_VERSION }}
        run: |
          ARTIFACT_NAME="gnc-trainer-$RELEASE_TAG.tar.gz"
          ASSET_ID=$(gh api \
            /repos/$GAME_REPO/releases/tags/$RELEASE_TAG \
            --jq '.assets[] | select(.name == "'$ARTIFACT_NAME'").id')
          gh api \
            /repos/$GAME_REPO/releases/assets/$ASSET_ID \
            --header "Accept: application/octet-stream" \
            > $ARTIFACT_NAME
          mkdir -p public/gnc-trainer
          tar xvf $ARTIFACT_NAME -C public/gnc-trainer
          sed -i 's|"/|"gnc-trainer/|g' public/gnc-trainer/index.html
          sed -i 's|'"'"'/|'"'"'/gnc-trainer/|g' public/gnc-trainer/index.html

      - name: Download and extract surveyor-sim WASM blob from GitHub
        run: |
          mkdir -p public/surveyor
          wget https://github.com/thomasantony/surveyor-sim/releases/download/v0.1.0/surveyor-sim-wasm-0.1.0.tar.gz
          tar xvf ./surveyor-sim-wasm-0.1.0.tar.gz -C public/surveyor
          sed -i 's|"/|"surveyor/|g' public/surveyor/index.html
          sed -i 's|'"'"'/|'"'"'/surveyor/|g' public/surveyor/index.html
      - name: Prepare for deployment
        run: |
          rm -rf public/.git || true

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: master
          folder: ./public
          ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          clean: true
          dry-run: true
          repository-name: thomasantony/thomasantony.github.io

  build_and_deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - name: checkout
        # uses: thomasantony/action-cached-lfs-checkout@v1
        uses: actions/checkout@v4
      - name: Create Git LFS file list
        run: git lfs ls-files -l |cut -d' ' -f1 |sort >.git/lfs-hashes.txt

      - name: Restore Git LFS object cache
        uses: actions/cache@v4
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfsdata-v1-${{ hashFiles('.git/lfs-hashes.txt') }}
          restore-keys: |
            ${{ runner.os }}-lfsdata-v1-
            ${{ runner.os }}-lfsdata

      - name: Fetch any needed Git LFS objects and prune extraneous ones
        run: git lfs fetch --prune

      - name: Check out Git LFS content
        run: git lfs checkout

      - name: Check out the private notes repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.NOTES_REPO }}
          ref: master
          token: ${{ secrets.PRIVATE_TOKEN }}
          path: content/notes

      - name: Build site using Zola
        uses: thomasantony/zola-build-action@v1.0.5
      - name: Set owner of working dir recursively
        run: sudo chown -R $(whoami) .

      - name: Download and extract game release from game repo
        env:
          GH_TOKEN: ${{ secrets.PRIVATE_TOKEN }}
          GAME_REPO: ${{ secrets.GAME_REPO }}
          RELEASE_TAG: ${{ vars.GNC_TRAINER_VERSION }}
        run: |
          ARTIFACT_NAME="gnc-trainer-$RELEASE_TAG.tar.gz"
          ASSET_ID=$(gh api \
            /repos/$GAME_REPO/releases/tags/$RELEASE_TAG \
            --jq '.assets[] | select(.name == "'$ARTIFACT_NAME'").id')
          gh api \
            /repos/$GAME_REPO/releases/assets/$ASSET_ID \
            --header "Accept: application/octet-stream" \
            > $ARTIFACT_NAME
          mkdir -p public/gnc-trainer
          tar xvf $ARTIFACT_NAME -C public/gnc-trainer
          sed -i 's|"/|"gnc-trainer/|g' public/gnc-trainer/index.html
          sed -i 's|'"'"'/|'"'"'/gnc-trainer/|g' public/gnc-trainer/index.html

      - name: Download and extract surveyor-sim WASM blob from GitHub
        run: |
          mkdir -p public/surveyor
          wget https://github.com/thomasantony/surveyor-sim/releases/download/v0.1.0/surveyor-sim-wasm-0.1.0.tar.gz
          tar xvf ./surveyor-sim-wasm-0.1.0.tar.gz -C public/surveyor
          sed -i 's|"/|"surveyor/|g' public/surveyor/index.html
          sed -i 's|'"'"'/|'"'"'/surveyor/|g' public/surveyor/index.html
      - name: Prepare for deployment
        run: |
          rm -rf public/.git || true

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.7.2
        with:
          branch: master
          folder: ./public
          ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          clean: true
          repository-name: thomasantony/thomasantony.github.io
